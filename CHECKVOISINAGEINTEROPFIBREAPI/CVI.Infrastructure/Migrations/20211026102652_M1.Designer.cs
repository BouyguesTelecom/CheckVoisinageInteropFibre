// <auto-generated />
using System;
using CVI.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CVI.Infrastructure.Migrations
{
    [DbContext(typeof(CviContext))]
    [Migration("20211026102652_M1")]
    partial class M1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("CVI.Domain.Model.Alarm", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AlarmType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ClearTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ClientResultID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NotificationId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ONTNr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PhotoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("ClientResultID");

                    b.HasIndex("PhotoId");

                    b.ToTable("PH_ALARMS");
                });

            modelBuilder.Entity("CVI.Domain.Model.Alarms.AlarmNotification", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AlarmType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ClearDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ClearTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NotificationId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ONTNr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PonPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("StartTime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ALARM_NOTIFICATIONS");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Address = "OLT3404:0-0-1-4",
                            AlarmType = "INACT",
                            ClearDateTime = new DateTime(2021, 3, 8, 11, 44, 47, 0, DateTimeKind.Unspecified),
                            ClearTime = "2021-03-08 11:44:47.0000000",
                            CreationDate = new DateTime(2021, 3, 8, 13, 58, 36, 591, DateTimeKind.Unspecified).AddTicks(2869),
                            NotificationId = "AMS:379039455",
                            ONTNr = "0",
                            PonPath = "OLT3404-LT1-PON4",
                            StartDateTime = new DateTime(2021, 3, 8, 11, 44, 17, 0, DateTimeKind.Unspecified),
                            StartTime = "2021-03-08 11:44:17.0000000"
                        },
                        new
                        {
                            ID = 2,
                            Address = "OLT3404:0-0-1-4",
                            AlarmType = "INACT",
                            ClearDateTime = new DateTime(2021, 3, 8, 11, 44, 47, 0, DateTimeKind.Unspecified),
                            ClearTime = "2021-03-08 11:44:47.0000000",
                            CreationDate = new DateTime(2021, 3, 8, 13, 58, 36, 591, DateTimeKind.Unspecified).AddTicks(2869),
                            NotificationId = "AMS:379040690",
                            ONTNr = "1",
                            PonPath = "OLT3404-LT1-PON4",
                            StartDateTime = new DateTime(2021, 3, 8, 11, 44, 17, 0, DateTimeKind.Unspecified),
                            StartTime = "2021-03-08 11:44:17.0000000"
                        },
                        new
                        {
                            ID = 3,
                            Address = "OLT3404:0-0-1-4",
                            AlarmType = "INACT",
                            ClearDateTime = new DateTime(2021, 3, 8, 11, 44, 47, 0, DateTimeKind.Unspecified),
                            ClearTime = "2021-03-08 11:44:47.0000000",
                            CreationDate = new DateTime(2021, 3, 8, 13, 58, 36, 591, DateTimeKind.Unspecified).AddTicks(2869),
                            NotificationId = "AMS:379040690",
                            ONTNr = "2",
                            PonPath = "OLT3404-LT1-PON4",
                            StartDateTime = new DateTime(2021, 3, 8, 11, 44, 17, 0, DateTimeKind.Unspecified),
                            StartTime = "2021-03-08 11:44:17.0000000"
                        },
                        new
                        {
                            ID = 4,
                            Address = "OLT3404:0-0-1-4",
                            AlarmType = "INACT",
                            ClearDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2021, 3, 8, 13, 58, 36, 591, DateTimeKind.Unspecified).AddTicks(2869),
                            NotificationId = "AMS:379040690",
                            ONTNr = "3",
                            PonPath = "OLT3404-LT1-PON4",
                            StartDateTime = new DateTime(2021, 3, 8, 11, 44, 17, 0, DateTimeKind.Unspecified),
                            StartTime = "2021-03-08 11:44:17.0000000"
                        },
                        new
                        {
                            ID = 5,
                            Address = "OLT3404:0-0-1-4",
                            AlarmType = "INACT",
                            ClearDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2021, 3, 8, 13, 58, 36, 591, DateTimeKind.Unspecified).AddTicks(2869),
                            NotificationId = "AMS:379040690",
                            ONTNr = "4",
                            PonPath = "OLT3404-LT1-PON4",
                            StartDateTime = new DateTime(2021, 3, 8, 11, 44, 17, 0, DateTimeKind.Unspecified),
                            StartTime = "2021-03-08 11:44:17.0000000"
                        });
                });

            modelBuilder.Entity("CVI.Domain.Model.ClientResult", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AdditionalInfos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClientStep")
                        .HasColumnType("int");

                    b.Property<int?>("ConclusionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstCallComent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdOSS")
                        .HasColumnType("int");

                    b.Property<int>("InterventionId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDown")
                        .HasColumnType("bit");

                    b.Property<int?>("LocalizationId")
                        .HasColumnType("int");

                    b.Property<string>("ONTPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SrvID")
                        .HasColumnType("int");

                    b.Property<int?>("StatusFirstCallId")
                        .HasColumnType("int");

                    b.Property<int?>("SubCauseId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ConclusionId");

                    b.HasIndex("InterventionId");

                    b.HasIndex("LocalizationId");

                    b.HasIndex("StatusFirstCallId");

                    b.HasIndex("SubCauseId");

                    b.ToTable("CL_CLIENT_RESULTS");
                });

            modelBuilder.Entity("CVI.Domain.Model.Conclusion", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("CL_CONCLUSIONS");
                });

            modelBuilder.Entity("CVI.Domain.Model.Intervention.Intervention", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("BeginDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InterventionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InterventionPto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InterventionTypeId")
                        .HasColumnType("int");

                    b.Property<int>("MutualisationPointId")
                        .HasColumnType("int");

                    b.Property<int>("OperatorId")
                        .HasColumnType("int");

                    b.Property<string>("UnloadedCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("InterventionTypeId");

                    b.HasIndex("MutualisationPointId");

                    b.HasIndex("OperatorId");

                    b.HasIndex("UserId");

                    b.ToTable("INT_INTERVENTIONS");
                });

            modelBuilder.Entity("CVI.Domain.Model.Intervention.InterventionType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time");

                    b.Property<string>("InterventionTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.ToTable("INT_INTERVENTION_TYPES");
                });

            modelBuilder.Entity("CVI.Domain.Model.Intervention.MutualisationPoint", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PMName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("INT_INTERVENTION_PMS");
                });

            modelBuilder.Entity("CVI.Domain.Model.Localization", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("CL_LOCALISATIONS");
                });

            modelBuilder.Entity("CVI.Domain.Model.Operator", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OperatorName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("REF_OPERATORS");
                });

            modelBuilder.Entity("CVI.Domain.Model.Photo.Photo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InterventionId")
                        .HasColumnType("int");

                    b.Property<int?>("PhotoResultID")
                        .HasColumnType("int");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("InterventionId");

                    b.HasIndex("PhotoResultID");

                    b.HasIndex("UserID");

                    b.ToTable("PH_PHOTOS");
                });

            modelBuilder.Entity("CVI.Domain.Model.Photo.PhotoResult", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<long>("AverageDownTime")
                        .HasColumnType("bigint");

                    b.Property<int>("ClientNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DownClientNumber")
                        .HasColumnType("int");

                    b.Property<int>("GreaterTo20DownNumber")
                        .HasColumnType("int");

                    b.Property<string>("ListDGOFF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LowerTo20DownNumber")
                        .HasColumnType("int");

                    b.Property<int>("NOKClientNumber")
                        .HasColumnType("int");

                    b.Property<string>("OperationStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SwitchedOffNumber")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("PH_PHOTO_RESULTS");
                });

            modelBuilder.Entity("CVI.Domain.Model.Referential.Equipement", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdOSS")
                        .HasColumnType("int");

                    b.Property<string>("LinkStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomNro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomPm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumONT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ONTPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PonPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SrvId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("NOT_EQUIPEMENTS");
                });

            modelBuilder.Entity("CVI.Domain.Model.StatusFirstCall", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCommentMandatory")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("CL_CLIENT_STATUS");
                });

            modelBuilder.Entity("CVI.Domain.Model.SubCause", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("CL_SUB_CAUSES");
                });

            modelBuilder.Entity("CVI.Domain.Model.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Profil")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("REF_USERS");
                });

            modelBuilder.Entity("LocalizationSubCause", b =>
                {
                    b.Property<int>("LocalizationsID")
                        .HasColumnType("int");

                    b.Property<int>("SubCausesID")
                        .HasColumnType("int");

                    b.HasKey("LocalizationsID", "SubCausesID");

                    b.HasIndex("SubCausesID");

                    b.ToTable("LOC_SUB_CAUSES");
                });

            modelBuilder.Entity("CVI.Domain.Model.Alarm", b =>
                {
                    b.HasOne("CVI.Domain.Model.ClientResult", "ClientResult")
                        .WithMany()
                        .HasForeignKey("ClientResultID");

                    b.HasOne("CVI.Domain.Model.Photo.Photo", "Photo")
                        .WithMany("Alarms")
                        .HasForeignKey("PhotoId");

                    b.Navigation("ClientResult");

                    b.Navigation("Photo");
                });

            modelBuilder.Entity("CVI.Domain.Model.ClientResult", b =>
                {
                    b.HasOne("CVI.Domain.Model.Conclusion", "Conclusion")
                        .WithMany()
                        .HasForeignKey("ConclusionId");

                    b.HasOne("CVI.Domain.Model.Intervention.Intervention", "Intervention")
                        .WithMany()
                        .HasForeignKey("InterventionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CVI.Domain.Model.Localization", "Localization")
                        .WithMany()
                        .HasForeignKey("LocalizationId");

                    b.HasOne("CVI.Domain.Model.StatusFirstCall", "StatusFirstCall")
                        .WithMany()
                        .HasForeignKey("StatusFirstCallId");

                    b.HasOne("CVI.Domain.Model.SubCause", "SubCause")
                        .WithMany()
                        .HasForeignKey("SubCauseId");

                    b.Navigation("Conclusion");

                    b.Navigation("Intervention");

                    b.Navigation("Localization");

                    b.Navigation("StatusFirstCall");

                    b.Navigation("SubCause");
                });

            modelBuilder.Entity("CVI.Domain.Model.Intervention.Intervention", b =>
                {
                    b.HasOne("CVI.Domain.Model.Intervention.InterventionType", "InterventionType")
                        .WithMany("Interventions")
                        .HasForeignKey("InterventionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CVI.Domain.Model.Intervention.MutualisationPoint", "MutualisationPoint")
                        .WithMany()
                        .HasForeignKey("MutualisationPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CVI.Domain.Model.Operator", "Operator")
                        .WithMany("Interventions")
                        .HasForeignKey("OperatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CVI.Domain.Model.User", "User")
                        .WithMany("Interventions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InterventionType");

                    b.Navigation("MutualisationPoint");

                    b.Navigation("Operator");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CVI.Domain.Model.Photo.Photo", b =>
                {
                    b.HasOne("CVI.Domain.Model.Intervention.Intervention", "Intervention")
                        .WithMany("Photos")
                        .HasForeignKey("InterventionId");

                    b.HasOne("CVI.Domain.Model.Photo.PhotoResult", "PhotoResult")
                        .WithMany()
                        .HasForeignKey("PhotoResultID");

                    b.HasOne("CVI.Domain.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("Intervention");

                    b.Navigation("PhotoResult");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LocalizationSubCause", b =>
                {
                    b.HasOne("CVI.Domain.Model.Localization", null)
                        .WithMany()
                        .HasForeignKey("LocalizationsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CVI.Domain.Model.SubCause", null)
                        .WithMany()
                        .HasForeignKey("SubCausesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CVI.Domain.Model.Intervention.Intervention", b =>
                {
                    b.Navigation("Photos");
                });

            modelBuilder.Entity("CVI.Domain.Model.Intervention.InterventionType", b =>
                {
                    b.Navigation("Interventions");
                });

            modelBuilder.Entity("CVI.Domain.Model.Operator", b =>
                {
                    b.Navigation("Interventions");
                });

            modelBuilder.Entity("CVI.Domain.Model.Photo.Photo", b =>
                {
                    b.Navigation("Alarms");
                });

            modelBuilder.Entity("CVI.Domain.Model.User", b =>
                {
                    b.Navigation("Interventions");
                });
#pragma warning restore 612, 618
        }
    }
}
